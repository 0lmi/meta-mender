# Load environment.
any_grubenv_valid=0
# Use for loop to provide redundant environment.
for env in 1 2; do
    # Skipping signatures?? Yes, because these values will change over time, so
    # they cannot be signed. There is also no checksum facility that will work
    # for changing values. Instead we check their content for validity.
    load_env --skip-sig --file ${prefix}/mender_grubenv${env} bootcount mender_boot_part upgrade_available

    if ! mender_check_grubenv_valid; then
        continue
    fi

    any_grubenv_valid=1
    break
done

if [ "${any_grubenv_valid}" != "1" ]; then
    echo "No valid environment found. Halting"
    halt
fi

if [ "${upgrade_available}" = "1" ]; then
    if [ "${bootcount}" != "0" ]; then
        echo "Rolling back..."
        if [ "${mender_boot_part}" = "${mender_rootfsa_part}" ]; then
            mender_boot_part="${mender_rootfsb_part}"
        else
            mender_boot_part="${mender_rootfsa_part}"
        fi
        upgrade_available=0
        bootcount=0
    else
        echo "Booting new update..."
        bootcount=1
    fi
    # Save redundant environment.
    save_env --file ${prefix}/mender_grubenv2 bootcount mender_boot_part upgrade_available
    save_env --file ${prefix}/mender_grubenv1 bootcount mender_boot_part upgrade_available
fi
